{"version":3,"sources":["components/Message/index.tsx","pages/barrage/barrage-list/index.tsx","pages/barrage/barrage-input/index.tsx","pages/barrage/barrage-topbar/index.tsx","pages/barrage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Message","props","className","message","BarrageList","componentDidMount","barrageList","this","style","overflowY","map","barrage","id","Component","BarrageInput","onChange","onSend","value","maxLength","showLimitHint","cutString","type","onClick","BarrageTopBar","changeEdit","setState","isEdit","changeName","name","resetName","state","setName","defaultValue","size","axios","defaults","baseURL","Screen","updateHeight","window","localStorage","getItem","uuid","uuidv4","replace","substr","setItem","forceUpdate","addEventListener","componentWillUnmount","removeEventListener","setMessage","sendMessage","color","length","Notification","error","title","post","fromId","fromName","data","Date","now","push","warning","setColor","colorLabel","menu","Item","backgroundColor","height","innerHeight","trigger","triggerType","afterOpen","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ca8a0e5.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { Input, Button } from '@b-design/ui';\nimport './index.scss';\ntype Props = {\n    message: string\n};\n\n\nfunction Message(props: Props) {\n    return (\n        <div className=\"message-container\">\n            <div className=\"message-item\">\n                {props.message}\n            </div>\n            <div className=\"avator\">\n\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n\n","import { Component } from 'react';\nimport Message from '../../../components/Message';\nimport './index.scss';\ntype Props = {\n    barrageList: Array<any>\n};\n\nclass BarrageList extends Component<Props, any> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    render() {\n        const { barrageList } = this.props;\n        return (\n            <div className=\"barrage-list-container\" style={{ overflowY: 'auto' }}>\n                <div className=\"barrage-list-content\">\n                    {\n                        barrageList.map((barrage) => {\n                            return <div key={barrage.id}>\n                                <Message message={barrage.message} />\n                            </div>\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BarrageList;\n","import { Component } from 'react';\nimport { Input, Button } from '@b-design/ui';\nimport './index.scss';\ntype Props = {\n    message: string,\n    onChange: (message: any) => void;\n    onSend: () => void;\n};\n\nclass BarrageInput extends Component<Props, any> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    render() {\n        const { onChange, onSend, message } = this.props;\n        return (\n            <div className=\"barrage-input-container\">\n                <Input className=\"barrage-input\" onChange={(message) => onChange(message)} value={message} maxLength={120} showLimitHint cutString /> <Button className=\"barrage-btn\" type=\"primary\" onClick={onSend}>输入</Button>\n            </div>\n        );\n    }\n}\n\nexport default BarrageInput;\n","import { Component } from 'react';\nimport { Input, Button, Icon } from '@b-design/ui';\nimport './index.scss';\ntype Props = {\n    name: string,\n    setName: (name: string) => void\n};\n\nclass BarrageTopBar extends Component<Props, any> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isEdit: false,\n            name: props.name\n        }\n    }\n\n    componentDidMount = () => {\n\n    }\n\n    changeEdit = () => {\n        this.setState({\n            isEdit: true\n        })\n    }\n\n    changeName = (name: any) => {\n        this.setState({\n            name\n        });\n\n    }\n\n    resetName = () => {\n        const { name } = this.state;\n        this.props.setName(name);\n        this.setState({\n            isEdit: false,\n        })\n    }\n\n    render() {\n        const { isEdit } = this.state;\n        const { name } = this.props;\n        return (\n            <div className=\"barrage-topbar-container\">\n                {isEdit ?\n                    <div className=\"edit-container\">\n                        <Input defaultValue={name} onChange={this.changeName} className=\"name-input\" />\n                        <Button onClick={this.resetName} type=\"primary\" size=\"small\" className=\"name-btn\">确定修改</Button>\n                    </div> : <div className=\"edit-container\">\n                        <div className=\"name-tag\">{name}</div>\n                        <Icon type=\"edit\" onClick={this.changeEdit} />\n                    </div>}\n            </div>\n        );\n    }\n}\n\nexport default BarrageTopBar;\n","import { Component } from 'react';\nimport axios from 'axios';\n\nimport { Notification, Dropdown, Menu } from '@b-design/ui';\nimport { v4 as uuidv4 } from 'uuid';\nimport BarrageList from './barrage-list';\nimport BarrageInput from './barrage-input';\nimport BarrageTopbar from './barrage-topbar';\nimport './index.scss';\ntype Props = {\n\n};\naxios.defaults.baseURL = '/api';\n\nclass Screen extends Component<Props, any> {\n    updateHeight: any;\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            barrageList: [],\n            message: '',\n            name: '',\n            color: 'blue',\n            colorLabel: '炫彩屏幕'\n        }\n    }\n\n    componentDidMount = () => {\n        let name = window.localStorage.getItem('devs-id');\n        if (!name) {\n            const uuid = uuidv4().replace('-', '').substr(0, 5);\n            name = `devs-${uuid}`;\n        }\n        this.setState({\n            name\n        });\n        window.localStorage.setItem('devs-id', name);\n        this.updateHeight = () => {\n            this.forceUpdate();\n        }\n        window.addEventListener('resize', this.updateHeight);\n\n\n    }\n\n    componentWillUnmount = () => {\n        window.removeEventListener('resize', this.updateHeight);\n    }\n    setMessage = (message: any) => {\n        this.setState({\n            message\n        })\n    }\n\n    sendMessage = () => {\n        const { barrageList, message, name, color } = this.state;\n        if (!message) {\n            Notification.warning({\n                title: '请输入字符'\n            });\n            return;\n        }\n        if (message.length > 120) {\n            Notification.error({\n                title: '弹幕字数不能超过120个'\n            });\n            return;\n        }\n        axios.post('/send', {\n            fromId: name || '',\n            fromName: name || '',\n            message,\n            color\n        });\n        const data = {\n            message,\n            id: Date.now()\n        };\n        barrageList.push(data);\n        this.setState({\n            barrageList,\n            message: ''\n        });\n\n\n    }\n\n    setName = (name: string) => {\n        this.setState({\n            name\n        });\n        window.localStorage.setItem('devs-id', name);\n    }\n\n    setColor = (color: string, colorLabel: string) => {\n        this.setState({\n            color,\n            colorLabel\n        })\n    }\n\n    render() {\n        const { barrageList, message, name, colorLabel, color } = this.state;\n        const menu = (\n            <Menu>\n                <Menu.Item style={{ backgroundColor: '#ec2d7a', color: '#fff' }} onClick={() => this.setColor('#ec2d7a', '藏花红')}>藏花红</Menu.Item>\n                <Menu.Item style={{ backgroundColor: '#cc163a', color: '#fff' }} onClick={() => this.setColor('#cc163a', '尖晶红玉')}>尖晶红玉</Menu.Item>\n                <Menu.Item style={{ backgroundColor: '#8076a3', color: '#fff' }} onClick={() => this.setColor('#8076a3', '藤萝紫')}>藤萝紫</Menu.Item>\n                <Menu.Item style={{ backgroundColor: '#11659a', color: '#fff' }} onClick={() => this.setColor('#11659a', '搪瓷蓝')}>搪瓷蓝</Menu.Item>\n                <Menu.Item style={{ backgroundColor: '#55bb8a', color: '#fff' }} onClick={() => this.setColor('#55bb8a', '麦苗绿')}>麦苗绿</Menu.Item>\n            </Menu>\n        );\n\n        return (\n            <div className=\"barrage-container\" style={{ height: window.innerHeight }}>\n                <div className=\"tool-tip\">\n                    <Dropdown trigger={<button className=\"tip-btn\" style={{ backgroundColor: color, color: 'white' }}>{colorLabel}</button>} triggerType={[\"click\"]} afterOpen={() => console.log('after open')}>\n                        {menu}\n                    </Dropdown>\n                </div>\n                <BarrageTopbar name={name} setName={this.setName} />\n                <BarrageList barrageList={barrageList} />\n                <BarrageInput onChange={this.setMessage} onSend={this.sendMessage} message={message} />\n            </div>\n        );\n    }\n}\n\nexport default Screen;\n","import React from 'react';\nimport Barrage from './pages/barrage';\nimport '@b-design/ui/dist/index.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Barrage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}